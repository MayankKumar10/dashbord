Table Chart

export default function TableChart() {
    const[subData, setSubData] = useState([]);
    const[finalData, setFinalData] = useState([]);
        
    function submitData(subData) {
        setFinalData(finalData => [...finalData, subData]);
        setSubData(subData = {});
        document.myForm.reset();
    }

    return (
        <div>
            <form name="myForm">
            <TableContainer style={{display:'flex',justifyContent:'center'}}>
                <Table style={{width:'50%', justifyContent:'center' }} size="small">
                    <TableHead>
                        <TableRow>
                            <TableCell> <TextField value={subData['sub']} onChange={(e)=>setSubData({...subData, "sub" : e.target.value})} label="Employee Name" margin="normal" variant="outlined" color="secondary" ></TextField> </TableCell>
                            <TableCell> <TextField value={subData['sem']} onChange={(e)=>setSubData({...subData, "sem" : e.target.value})}label="Performance / 10" margin="normal" variant="outlined" color="secondary" ></TextField> </TableCell>
                            <TableCell> <Button variant="contained" onClick={()=>submitData(subData)} color="primary"> Add Employee</Button> </TableCell>
                        </TableRow>
                    </TableHead>
                    <TableBody>
                        {finalData.map(data=>(
                            <TableRow>
                                <TableCell>{data.sub}</TableCell>
                                <TableCell>{data.sem}</TableCell>
                            </TableRow>
                        ))}
                    </TableBody>
                </Table>
            </TableContainer>
            </form>
            <br/>

            <Chart data={finalData} />
        </div>
    )
}





-----------------------------------------------
Chart

export default function Chart(data) {

    const Labels = data.data.map(emp=>emp.sub);
    const dataVal = data.data.map(val=>val.sem);
    const ChartData = {
        labels : Labels, 
            datasets :[
                {
                    Label: "Emp Performance",
                    backgroundColor: 'rgba(75,192,192,1)',
                    borderColor: 'rgba(0,0,0,1)',
                    borderWidth:1,
                    data : dataVal
                }
            ]
    }
    

    return (
        <div >
            <div style={{ width: '50%', height:"400px", backgroundColor:"antiquewhite", justifyContent:'center' ,position: 'absolute', left: '50%',top: '50%', WebkitTransform: 'translate(-50%, -50%)',transform: 'translate(-50%, -50%)'}}>
                <Line
                    
                    options={{
                        maintainAspectRatio : false,
                        title:{
                        display:true,
                        text:'Employee Performance Chart',
                        fontSize:25,
                        },
                        scales: {
                            yAxes:[{
                                ticks:{
                                    beginAtZero : true,
                                    fontSize: 15,
                                    fontColor: '#000'
                                }
                            }],
                            xAxes:[{
                                ticks:{
                                    fontSize: 16,
                                    fontColor: '#000'
                                }
                            }]
                        }
                    }}
                    data={ChartData}
                    >

                </Line>
            </div>
        </div>
    )
}






-----------------------------------------------







